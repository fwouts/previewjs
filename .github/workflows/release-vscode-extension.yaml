name: Release VS Code Extension

on:
  release:
    types:
      - created

defaults:
  run:
    working-directory: integrations/vscode

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/integrations/vscode/v')
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache pnpm modules
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-exclude-test-apps-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-exclude-test-apps-
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          run_install: |
            - args: [--filter=\!./framework-plugins/\*/tests/apps/\*]
      - run: cd .. && pnpm turbo run build --scope=@previewjs/loader --include-dependencies
      - name: Extract version from package.json
        uses: sergeysova/jq-action@a3f0d4ff59cc1dddf023fc0b325dd75b10deec58 # v2.3.0
        id: version
        with:
          cmd: "jq .version integrations/vscode/package.json -r"
      - name: Extract version from release name
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/integrations\/vscode\/v/}" >> $GITHUB_ENV
      - name: Check that versions match
        run: '[[ "${{ steps.version.outputs.value }}" == "$VERSION" ]] && echo "Versions match"'
      - name: Publish to Visual Studio Code Marketplace
        run: pnpm vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
