name: Release @previewjs/cli

on:
  release:
    types:
      - created

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/cli/v')
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          always-auth: true
          node-version: ${{ matrix.node-version }}
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Cache pnpm modules
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-exclude-test-apps-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-exclude-test-apps-
      - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
        with:
          run_install: |
            - args: [--filter=\!./framework-plugins/\*/tests/apps/\*]
      - run: pnpm turbo build --filter="./integrations/cli"
      - name: Extract version from package.json
        uses: sergeysova/jq-action@a3f0d4ff59cc1dddf023fc0b325dd75b10deec58 # v2.3.0
        id: version
        with:
          cmd: "jq .version integrations/cli/package.json -r"
      - name: Extract version from release name
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/cli\/v/}" >> $GITHUB_ENV
      - name: Check that versions match
        run: '[[ "${{ steps.version.outputs.value }}" == "$VERSION" ]] && echo "Versions match"'
      - name: Publish
        run: cd integrations/cli && pnpm publish --no-git-checks --access public
